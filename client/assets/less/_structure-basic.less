/**
* _structure-basic.less
* This document includes all the basic elements, which are used for our game.
* @author Tamara Lütscher
* @version 1.0 */

/* Helper Elements
/* -------------------------- */
// simple class for clear the parentelements from the float childelements
// einfache Klasse um Elternelemente von floatenden Kindelementen zu clearen
.clearfix {
    .clearfix();
}

// simple class for float the elements right
// einfache Klasse um Elemente rechts zu floaten
.pull-right {
    float: right !important;
}

// simple class for float the elements left
// einfache Klasse um Elemente links zu floaten
.pull-left {
    float: left !important;
}

// simple class for remove floats from elements
// einfache Klasse um Elemente den das Floating zu entfernen
.pull-none {
    float: none !important;
}

// simple class for text, which should be text-align left
// einfache Klasse Text in Elementen links auszurichten
.text-left {
    text-align: left;
}

// simple class for text, which should be text-align center
// einfache Klasse Text in Elementen zentriert auszurichten
.text-center {
    text-align: center;
}

// simple class for text, which should be text-align right
// einfache Klasse Text in Elementen rechts auszurichten
.text-right {
    text-align: right;
}

// simple class for elements to hide
// einfache Klasse um Elemente nicht existent zu machen
.hide {
    display: none !important;
}

// simple class for elements to show
// einfache Klasse um Elemente existent zu machen
.show {
    display: block !important;
}

// simple class for elements to set visibility hidden
// einfache Klasse um Elemente unsichtbar zu machen
.invisible {
    visibility: hidden;
}

// simple class for elements, to cut text-overflow with 3 points
// einfache Klasse um Elemente den Textüberfluss mit 3 Punkten zu kürzen
.text-overflow {
    .text-overflow();
}

// simple class for elements, to hide text
.text-hide {
    .text-hide();
}

.fade {
    .opacity(0);
    .transition(opacity .15s linear);
    &.in {
        .opacity(1);
    }
}

.collapse {
    display: none;
    &.in {
        display: block;
    }
}

.collapsing {
    position: relative;
    height: 0;
    overflow: hidden;
    .transition(height .35s ease);
}

// simple class for elements to set proportion for responsive
// einfache Klasse um Elemente in einem Verhältnis responsive zu machen
.embed-responsive {
    position: relative;
    display: block;
    height: 0;
    padding: 0;
    overflow: hidden;

    .embed-responsive-item,
    iframe,
    embed,
    object,
    video {
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        height: 100%;
        width: 100%;
        border: 0;
    }

    &.embed-responsive-16-9 {
        padding-bottom: 56.25%;
    }

    &.embed-responsive-4-3 {
        padding-bottom: 75%;
    }
}

.total-center() {
    top: 50%;
    left: 50%;
    .translate(-50%, -50%);
}

.vertical-center() {
    top: 50%;
    .translate(0, -50%);
}

.horizontal-center() {
    left: 50%;
    .translate(-50%, 0);
}

.make-responsivehelpers();
.make-breakpointborders();

////////
/* Box Model
/* -------------------------- */
// set box model on border-box
// Setzt global das Box Model auf border-box
*,
*:before,
*:after {
    .box-sizing(border-box);
}

// fits stylesheets in (xs, ty, sm, md, lg)
// Fügt die Stylesheets (xs,ty,sm,md,lg) ein
.isstatic(@static);